{
  "service": {
    "service": "user",
    "serviceObject": {
      "name": "user"
    },
    "provider": {
      "stage": "local",
      "region": "eu-central-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._,\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs6.10",
      "profile": "hotels-local",
      "environment": {
        "s3Bucket": "com.hotels.local.",
        "region": "eu-central-1",
        "userpool": "arn:aws:cognito-idp:eu-west-2:402504575174:userpool/eu-west-2_pLhYytHVq",
        "version": "1.0.0",
        "SALT": "q?Ufd{Ep8>lPQ*~mc|bVT$<*;zI?r(:3lkVk~;pT:**dqbw}.nv334W`@9Z#,ki9"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*"
          ],
          "Resource": [
            "arn:aws:dynamodb:eu-central-1:*:table/organisations",
            "arn:aws:dynamodb:eu-central-1:*:table/organisations/index/*",
            "arn:aws:dynamodb:eu-central-1:*:table/userOrganisations",
            "arn:aws:dynamodb:eu-central-1:*:table/userOrganisations/index/*"
          ]
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "OrganisationsGetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/user-local-organisationsGet"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "local",
                        "user",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/user-local-organisationsGet:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/user-local-organisationsGet:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:*"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:eu-central-1:*:table/organisations",
                          "arn:aws:dynamodb:eu-central-1:*:table/organisations/index/*",
                          "arn:aws:dynamodb:eu-central-1:*:table/userOrganisations",
                          "arn:aws:dynamodb:eu-central-1:*:table/userOrganisations/index/*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "user",
                    "local",
                    "eu-central-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "OrganisationsGetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/user/local/1522337692507-2018-03-29T15:34:52.507Z/user.zip"
              },
              "FunctionName": "user-local-organisationsGet",
              "Handler": "organisations-get.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "s3Bucket": "com.hotels.local.",
                  "region": "eu-central-1",
                  "userpool": "arn:aws:cognito-idp:eu-west-2:402504575174:userpool/eu-west-2_pLhYytHVq",
                  "version": "1.0.0",
                  "SALT": "q?Ufd{Ep8>lPQ*~mc|bVT$<*;zI?r(:3lkVk~;pT:**dqbw}.nv334W`@9Z#,ki9"
                }
              }
            },
            "DependsOn": [
              "OrganisationsGetLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "OrganisationsGetLambdaVersionQqoKqAiwzzkAfhXyhmz0sROlw3XxpA0vRbDOdI5bDk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OrganisationsGetLambdaFunction"
              },
              "CodeSha256": "QqoKqAiwzzkAfhXyhmz0sROlw3+XxpA0vRbDOdI5bDk="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "local-user"
            }
          },
          "ApiGatewayResourceOrganisations": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "organisations",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOrganisationsMe": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceOrganisations"
              },
              "PathPart": "me",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOrganisationsMeOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Content-Version,Authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceOrganisationsMe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOrganisationsMeGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOrganisationsMe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "2UnderscorepLhYytHVqApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OrganisationsGetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "2UnderscorepLhYytHVqApiGatewayAuthorizer"
          },
          "2UnderscorepLhYytHVqApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "2_pLhYytHVq",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                "arn:aws:cognito-idp:eu-west-2:402504575174:userpool/eu-west-2_pLhYytHVq"
              ]
            }
          },
          "ApiGatewayDeployment1522337692516": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "local"
            },
            "DependsOn": [
              "ApiGatewayMethodOrganisationsMeGet"
            ]
          },
          "OrganisationsGetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OrganisationsGetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "OrganisationsGetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OrganisationsGetLambdaVersionQqoKqAiwzzkAfhXyhmz0sROlw3XxpA0vRbDOdI5bDk"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.eu-central-1.amazonaws.com/local"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "defaultStage": "local",
      "webpack": "./config/webpack.config.js",
      "stage": {
        "s3Bucket": "com.hotels.local.",
        "region": "eu-central-1",
        "userpool": "arn:aws:cognito-idp:eu-west-2:402504575174:userpool/eu-west-2_pLhYytHVq",
        "version": "1.0.0",
        "SALT": "q?Ufd{Ep8>lPQ*~mc|bVT$<*;zI?r(:3lkVk~;pT:**dqbw}.nv334W`@9Z#,ki9"
      },
      "cors": {
        "origin": "*",
        "headers": [
          "Content-Type",
          "Content-Version",
          "Authorization"
        ],
        "allowCredentials": false
      }
    },
    "plugins": [
      "serverless-webpack"
    ],
    "functions": {
      "organisationsGet": {
        "handler": "organisations-get.handler",
        "events": [
          {
            "http": {
              "path": "organisations/me",
              "method": "get",
              "cors": {
                "origin": "*",
                "headers": [
                  "Content-Type",
                  "Content-Version",
                  "Authorization"
                ],
                "allowCredentials": false,
                "methods": [
                  "OPTIONS",
                  "GET"
                ]
              },
              "authorizer": {
                "name": "2_pLhYytHVq",
                "arn": "arn:aws:cognito-idp:eu-west-2:402504575174:userpool/eu-west-2_pLhYytHVq",
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "user-local-organisationsGet",
        "package": {},
        "vpc": {}
      }
    },
    "artifact": ".webpack-local/.serverless/user.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/user/local/1522337692507-2018-03-29T15:34:52.507Z",
    "artifact": "user.zip"
  }
}